name: dealer-service
services:
  # webservice:
  #   depends_on:
  #     database:
  #       condition: service_healthy
  #   image: platform/dealer-service:local
  #   pull_policy: never
  #   hostname: dealer-service.local
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #     args:
  #       BUILD_VERSION: build.local
  #       BUILD_NUMBER: build.local
  #     target: local
  #   ports:
  #     - "10101:8000"
  #     - "9229:9229"
  #   volumes:
  #     - type: bind
  #       source: ./
  #       target: /app
  #       bind:
  #         create_host_path: true
  #     - npm-cache-volume:/root/.npm
  #     - $HOME/.aws:/home/dev/.aws
  #     - $HOME/.aws:/.aws
  #   networks:
  #     - mobials
  #   command: /bin/sh -c "npm install && npm run start:debug"

  database:
    container_name: dealer-database
    image: postgres:15.3-alpine
    environment:
      POSTGRES_PASSWORD: passwd
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - database-database-volume:/var/lib/postgresql/data
      - ./conf/postgres:/docker-entrypoint-initdb.d
    networks:
      - mobials

  adminer:
    image: adminer
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - mobials

  zookeeper:
    hostname: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
    networks:
      - mobials

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    depends_on:
      - zookeeper
    volumes:
      - kafka-data:/var/lib/kafka/data
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:9092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - mobials

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    hostname: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - mobials


volumes:
  # shared composer cache volume
  npm-cache-volume:
    name: platform-npm-cache
    external: true
  database-database-volume:
    name: dealer-database
  kafka-data:
    name: kafka-data
  zookeeper-data:
    name: zookeeper-data
  zookeeper-logs:
    name: zookeeper-logs

networks:
  # shared network
  mobials:
    name: mobials
    external: true